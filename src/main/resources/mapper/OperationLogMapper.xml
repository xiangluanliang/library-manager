<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guo.mapper.OperationLogMapper">
  <resultMap id="BaseResultMap" type="com.guo.domain.OperationLog">
    <id column="log_id" jdbcType="INTEGER" property="logId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="operation_type" jdbcType="VARCHAR" property="operationType" />
    <result column="operation_time" jdbcType="TIMESTAMP" property="operationTime" />
    <result column="target_id" jdbcType="INTEGER" property="targetId" />
    <result column="target_type" jdbcType="VARCHAR" property="targetType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.guo.domain.OperationLog">
    <result column="details" jdbcType="LONGVARCHAR" property="details" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    log_id, user_id, operation_type, operation_time, target_id, target_type
  </sql>
  <sql id="Blob_Column_List">
    details
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.guo.domain.OperationLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.guo.domain.OperationLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from operation_log
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from operation_log
    where log_id = #{logId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.guo.domain.OperationLogExample">
    delete from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guo.domain.OperationLog">
    <selectKey keyProperty="logId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into operation_log (user_id, operation_type, operation_time, 
      target_id, target_type, details
      )
    values (#{userId,jdbcType=INTEGER}, #{operationType,jdbcType=VARCHAR}, #{operationTime,jdbcType=TIMESTAMP}, 
      #{targetId,jdbcType=INTEGER}, #{targetType,jdbcType=VARCHAR}, #{details,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.guo.domain.OperationLog">
    <selectKey keyProperty="logId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into operation_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="operationType != null">
        operation_type,
      </if>
      <if test="operationTime != null">
        operation_time,
      </if>
      <if test="targetId != null">
        target_id,
      </if>
      <if test="targetType != null">
        target_type,
      </if>
      <if test="details != null">
        details,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="operationType != null">
        #{operationType,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null">
        #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="targetId != null">
        #{targetId,jdbcType=INTEGER},
      </if>
      <if test="targetType != null">
        #{targetType,jdbcType=VARCHAR},
      </if>
      <if test="details != null">
        #{details,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guo.domain.OperationLogExample" resultType="java.lang.Long">
    select count(*) from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update operation_log
    <set>
      <if test="record.logId != null">
        log_id = #{record.logId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.operationType != null">
        operation_type = #{record.operationType,jdbcType=VARCHAR},
      </if>
      <if test="record.operationTime != null">
        operation_time = #{record.operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.targetId != null">
        target_id = #{record.targetId,jdbcType=INTEGER},
      </if>
      <if test="record.targetType != null">
        target_type = #{record.targetType,jdbcType=VARCHAR},
      </if>
      <if test="record.details != null">
        details = #{record.details,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update operation_log
    set log_id = #{record.logId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      operation_type = #{record.operationType,jdbcType=VARCHAR},
      operation_time = #{record.operationTime,jdbcType=TIMESTAMP},
      target_id = #{record.targetId,jdbcType=INTEGER},
      target_type = #{record.targetType,jdbcType=VARCHAR},
      details = #{record.details,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update operation_log
    set log_id = #{record.logId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      operation_type = #{record.operationType,jdbcType=VARCHAR},
      operation_time = #{record.operationTime,jdbcType=TIMESTAMP},
      target_id = #{record.targetId,jdbcType=INTEGER},
      target_type = #{record.targetType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guo.domain.OperationLog">
    update operation_log
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="operationType != null">
        operation_type = #{operationType,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null">
        operation_time = #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="targetId != null">
        target_id = #{targetId,jdbcType=INTEGER},
      </if>
      <if test="targetType != null">
        target_type = #{targetType,jdbcType=VARCHAR},
      </if>
      <if test="details != null">
        details = #{details,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.guo.domain.OperationLog">
    update operation_log
    set user_id = #{userId,jdbcType=INTEGER},
      operation_type = #{operationType,jdbcType=VARCHAR},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      target_id = #{targetId,jdbcType=INTEGER},
      target_type = #{targetType,jdbcType=VARCHAR},
      details = #{details,jdbcType=LONGVARCHAR}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guo.domain.OperationLog">
    update operation_log
    set user_id = #{userId,jdbcType=INTEGER},
      operation_type = #{operationType,jdbcType=VARCHAR},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      target_id = #{targetId,jdbcType=INTEGER},
      target_type = #{targetType,jdbcType=VARCHAR}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
</mapper>